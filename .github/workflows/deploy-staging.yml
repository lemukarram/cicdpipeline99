name: Deploy to Staging

on:
  push:
    branches:
      - master   # whenever you push/merge into master, deploy to staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create release tarball
        run: |
          RELEASE="release-$(date +%Y%m%d%H%M%S).tgz"
          tar --exclude='.git' -czf $RELEASE .
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV

      - name: Upload release to server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          RELEASE: ${{ env.RELEASE }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          mkdir -p ~/.ssh
          echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          scp -P $SSH_PORT -i key.pem $RELEASE $SSH_USER@$SSH_HOST:/tmp/

      - name: Deploy on staging server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          RELEASE: ${{ env.RELEASE }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          ssh -p $SSH_PORT -i key.pem $SSH_USER@$SSH_HOST "
            mkdir -p ~/staging &&
            tar -xzf /tmp/$RELEASE -C ~/staging &&
            rm /tmp/$RELEASE
          "
