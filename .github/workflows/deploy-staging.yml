name: Deploy to Staging

on:
  push:
    branches: [ master ]

concurrency:
  group: staging-deploy
  cancel-in-progress: true

jobs:
  deploy-staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create release tarball
        run: |
          RELEASE="release-$(date +%Y%m%d%H%M%S).tgz"
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV
          tar --exclude='.git' \
              --exclude='.github' \
              --exclude='deploy-exclude.txt' \
              --warning=no-file-changed \
              --ignore-failed-read \
              -czf "$RELEASE" .

      - name: Add SSH host key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Copy tarball to server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          scp -P ${{ secrets.SSH_PORT }} -i key.pem "$RELEASE" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/

      - name: Deploy on server (staging)
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          STAGING_PATH: ${{ secrets.STAGING_PATH }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          ssh -p ${{ secrets.SSH_PORT }} -i key.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} bash -s << 'EOF'
          set -euo pipefail

          RELEASE_NAME="${RELEASE:-release-$(date +%Y%m%d%H%M%S).tgz}"
          REL_DIR="releases/$(date +%Y%m%d%H%M%S)"

          cd "$STAGING_PATH"

          mkdir -p "$REL_DIR"
          tar -xzf "/tmp/${RELEASE_NAME}" -C "$REL_DIR"

          # Link shared resources (create if missing)
          [ -f shared/.env ] || touch shared/.env
          [ -d shared/uploads ] || mkdir -p shared/uploads

          # Symlink shared items into the new release (adjust if needed)
          ln -sfn "$STAGING_PATH/shared/.env" "$REL_DIR/.env"
          ln -sfn "$STAGING_PATH/shared/uploads" "$REL_DIR/uploads"

          # (Optional) PHP syntax check a key file
          if command -v php >/dev/null 2>&1; then
            php -l "$REL_DIR/index.php" || true
          fi

          # Atomic switch to new release
          ln -sfn "$STAGING_PATH/$REL_DIR" "$STAGING_PATH/current"

          # Retain last 5 releases
          ls -1dt releases/* | tail -n +6 | xargs -r rm -rf

          # Cleanup uploaded tarball
          rm -f "/tmp/${RELEASE_NAME}"
          EOF